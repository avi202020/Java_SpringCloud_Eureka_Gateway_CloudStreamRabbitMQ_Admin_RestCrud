# Notice I am not specifying any rabbitmq properties because the defaults are ok
# Cloud Data Stream will work with RabbitMQ Just fine only because we have Rabbit in the class path
# If you use RabbitMQ in a docker machine then you would need to adjust the ip/port/user/pass spring.rabbitmq.host=the_ip
server:
  port: 8081


eureka:
  instance:
    instance-id: todo-service
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  application:
    name: todo-service
  datasource:
    username: user
    password: password
    url: jdbc:h2:file:./database/h2.db;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1

  h2:
    console:
      path: /h2-console
      settings:
        trace: true
      enabled: true
  jpa:
    show-sql: true

  cloud:
    stream:
      bindings:
        output:
          destination: todo-events-output
        input:
          destination: todo-events-input



management:
  endpoints:
    web:
      exposure:
        include: '*'


logging:
  level:
    root: warn
    com.melardev: trace
    org.springframework.web: debug

